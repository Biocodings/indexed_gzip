branches:
  only:
    - master

language: python
python:
  - "2.7"
  - "3.5"

env:

# NELEMS=16777216 works out to be 128MB uncompressed
  - TEST_SUITE=zran_test         NITERS=1000 NELEMS=16777216 TEST_PATTERN="not test_readbuf_spacing_sizes and not test_seek_then_read_block"
  - TEST_SUITE=zran_test         NITERS=1000 NELEMS=16777216 TEST_PATTERN="test_readbuf_spacing_sizes"
  - TEST_SUITE=zran_test         NITERS=1000 NELEMS=16777216 TEST_PATTERN="test_seek_then_read_block"
  - TEST_SUITE=indexed_gzip_test NITERS=1000 NELEMS=16777216 TEST_PATTERN="not test_readbuf_spacing_sizes and not test_seek_then_read_block"
  - TEST_SUITE=indexed_gzip_test NITERS=1000 NELEMS=16777216 TEST_PATTERN="test_readbuf_spacing_sizes"
  - TEST_SUITE=indexed_gzip_test NITERS=1000 NELEMS=16777216 TEST_PATTERN="test_seek_then_read_block"


# TODO This is needed for testing reads greater than 4GB (i.e.
#      reading >= 2**32 bytes in one go). They need time and
#      > 4GB of RAM. I don't think travis-ci can handle them. 
#  - NELEMS=536871012

# I also want to test bigger files (~2GB)
#  - NELEMS=268435456
  
install: "pip install -r requirements.txt"

script:
  - python setup.py install
  - | travis_wait 30 python setup.py test --addopts "-v -s -m $TEST_SUITE -k $TEST_PATTERN --nelems $NELEMS --niters $NITERS"
  - | travis_wait 30 python setup.py test --addopts "-v -s -m $TEST_SUITE -k $TEST_PATTERN --nelems $NELEMS --niters $NITERS --concat"
